apiVersion: v1
data:
  .gitignore: |
    config.dev.yaml
  config.production.yaml: |+
    serve:
      public:
        base_url: https://cookwherever.com/api/kratos/
        cors:
          enabled: true
      admin:
        base_url: http://localhost:4434/

    selfservice:
      default_browser_return_url: https://cookwherever.com/
      allowed_return_urls:
        - https://cookwherever.com

      flows:
        error:
          ui_url: https://cookwherever.com/auth/error

        settings:
          ui_url: https://cookwherever.com/api/kratos/settings

        recovery:
          ui_url: https://cookwherever.com/api/kratos/recovery

        verification:
          ui_url: https://cookwherever.com/api/kratos/verification
          after:
            default_browser_return_url: https://cookwherever.com/

        logout:
          after:
            default_browser_return_url: https://cookwherever.com

        login:
          ui_url: https://cookwherever.com
          lifespan: 10m

        registration:
          ui_url: https://cookwherever.com/
          lifespan: 10m
          after:
            password:
              hooks:
                - hook: session

    log:
      level: debug
      format: text
      leak_sensitive_values: false

  config.yaml: |
    serve:
      public:
        base_url: http://localhost:4455/api/kratos

        cors:
          enabled: true
      admin:
        base_url: http://kratos:4434/

    selfservice:
      default_browser_return_url: http://localhost:4455/
      allowed_return_urls:
        - http://localhost:4455

      methods:
        password:
          enabled: false
        oidc:
          enabled: true
          config:
            providers:
              - id: google
                provider: google
                client_id: fake-value
                client_secret: another-fake-value
                mapper_url: file:///config/kratos/oidc.google.jsonnet
                scope:
                  - email
      flows:
        login:
          ui_url: http://localhost:4455/auth/login

        error:
          ui_url: http://localhost:4455/auth/error

        settings:
          ui_url: http://localhost:4455/api/kratos/settings
          privileged_session_max_age: 15m

        recovery:
          enabled: true
          ui_url: http://localhost:4455/api/kratos/recovery

        verification:
          enabled: true
          ui_url: http://localhost:4455/api/kratos/verification
          after:
            default_browser_return_url: http://localhost:4455/

        logout:
          after:
            default_browser_return_url: http://localhost:4455

        registration:
          lifespan: 10m
          ui_url: http://localhost:4455/account/register

    log:
      level: debug
      format: text
      leak_sensitive_values: true

    secrets:
      cookie:
        - PLEASE-CHANGE-ME-I-AM-VERY-INSECURE
      cipher:
        - 32-LONG-SECRET-NOT-SECURE-AT-ALL

    ciphers:
      algorithm: xchacha20-poly1305

    hashers:
      algorithm: bcrypt
      bcrypt:
        cost: 8

    identity:
      default_schema_id: user_v0
      schemas:
      - id: user_v0
        url: file:///config/kratos/identity_v0.schema.json

    courier:
      smtp:
        connection_uri: smtps://test:test@mailslurper:1025/?skip_ssl_verify=true
  identity_v0.schema.json: |
    {
      "$id": "cookwherever-identity-schema",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Person",
      "type": "object",
      "properties": {
        "traits": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email",
              "title": "E-Mail",
              "group": "password",
              "minLength": 3,
              "ory.sh/kratos": {
                "credentials": {
                  "password": {
                    "identifier": true
                  }
                },
                "verification": {
                  "via": "email"
                },
                "recovery": {
                  "via": "email"
                }
              }
            },
            "name": {
              "title": "Name",
              "type": "string",
              "group": "profile"
            },
            "username": {
              "title": "Username",
              "type": "string",
              "group": "profile"
            },
            "website": {
              "title": "Website",
              "type": "string",
              "group": "profile"
            },
            "picture": {
              "title": "Picture",
              "type": "string",
              "group": "profile"
            },
            "profileUrl": {
              "title": "ProfileUrl",
              "type": "string",
              "group": "profile"
            }
          },
          "required": [
            "email"
          ],
          "additionalProperties": false
        }
      }
    }
  oidc.google.jsonnet: |-
    local claims = {
      email_verified: true
    } + std.extVar('claims');

    {
      identity: {
        traits: {
          [if "email" in claims && claims.email_verified then "email" else null]: claims.email,
          [if "given_name" in claims && claims.given_name then "first_name" else null]: claims.given_name,
          [if "family_name" in claims && claims.family_name then "last_name" else null]: claims.family_name,
          [if "hd" in claims && claims.email_verified then "hd" else null]: claims.hd,
        },
      },
    }
  oidc.hook.jsonnet: 'function(ctx) { ctx: ctx }'
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: kratos-migrate
  name: kratos-migrate-cm0
