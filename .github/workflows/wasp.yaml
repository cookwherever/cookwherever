name: Wasp

on:
  workflow_dispatch:
  push:
    paths:
      - 'wasp/**'
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2
      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.8.0
        with:
          setup-tools: |
            yq
          yq: "4.16.2"

      - name: Setup Node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '18'
#      - uses: actions/cache@v2
#        id: npm-cache
#        with:
#          path: '**/node_modules'
#          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}
#
#      - name: Install dependencies
#        if: steps.npm-cache.outputs.cache-hit != 'true'
#        run: cd frontend && yarn install --frozen-lockfile

      - run: |
          cd wasp
          wasp build
        name: "Build wasp"

      - run: |
          cd wasp/.wasp/build
          PORT=80 docker build . --file Dockerfile --tag backend
        name: "Build backend image"
        env:
          REACT_APP_GIT_SHA: ${{ github.SHA }}

      - run: |
          cp Dockerfile wasp/.wasp/build/web-app
          cp nginx.config wasp/.wasp/build/web-app
          cd wasp/.wasp/build/web-app
          npm install
          REACT_APP_API_URL="https://api.cookwherever.com" npm run build
          docker build . --file Dockerfile --tag frontend
        name: "Build frontend image"
        env:
          REACT_APP_GIT_SHA: ${{ github.SHA }}

      - if: ${{ !(github.event_name == 'push' && github.ref == 'refs/heads/master') }}
        run: exit 0

      - name: Log into registry
        if: steps.branch-name.outputs.current_branch == 'master'
        run: echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push backend image
        if: steps.branch-name.outputs.current_branch == 'master'
        run: |
          FRONTEND_IMAGE_ID=ghcr.io/cookwherever/frontend
          BACKEND_IMAGE_ID=ghcr.io/cookwherever/backend
          
          # Change all uppercase to lowercase
          FRONTEND_IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          BACKEND_IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          
          echo FRONTEND_IMAGE_ID=$FRONTEND_IMAGE_ID
          echo BACKEND_IMAGE_ID=$BACKEND_IMAGE_ID
          echo VERSION=$VERSION
          
          docker tag frontend $FRONTEND_IMAGE_ID:$VERSION
          docker tag backend $BACKEND_IMAGE_ID:$VERSION
          docker push $FRONTEND_IMAGE_ID:$VERSION
          docker push $BACKEND_IMAGE_ID:$VERSION
          
          yq -i e ".services.frontend.image |= \"$(docker inspect --format='{{index .RepoDigests 0}}' $FRONTEND_IMAGE_ID:$VERSION)\"" docker-compose.wasp.yaml
          yq -i e ".services.backend.image |= \"$(docker inspect --format='{{index .RepoDigests 0}}' $BACKEND_IMAGE_ID:$VERSION)\"" docker-compose.wasp.yaml

      - name: Create commit
        id: create-commit
        if: steps.branch-name.outputs.current_branch == 'master'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docker-compose.wasp.yaml
          commit_message: "chore: update container hash [skip ci]"

      - run: sleep 10

      - name: Invoke deploy on new commit
        if: steps.branch-name.outputs.current_branch == 'master'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy
          token: ${{ secrets.GH_TOKEN }}
          ref: master
