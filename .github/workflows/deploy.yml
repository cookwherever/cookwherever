name: Deploy Helm chart

concurrency: deploy_prod

on:
  workflow_dispatch:
  push:
    paths:
      - '.github/**'
      - 'docker-compose.yml'
      - 'docker-compose.*.yml'

jobs:
  kompose:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.save-commit-hash.outputs.commit_hash }}

    steps:
      - uses: actions/checkout@v3
      - run: curl -L https://github.com/kubernetes/kompose/releases/download/v1.26.1/kompose-linux-amd64 -o kompose && chmod +x kompose
        name: Install kompose
      - run: ./kompose -f docker-compose.yaml -f docker-compose.prod.yaml convert -c -o k8s
      - name: Create commit
        id: create-commit
        if: github.branch == 'master'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: k8s/**/
          commit_message: "chore: run kompose [skip ci]"
          commit_user_name: cookwherever[bot]
          commit_user_email: cookwherever[bot]@users.noreply.github.com
          commit_author: cookwherever[bot] <cookwherever[bot]@users.noreply.github.com>
      - name: Save commit hash
        id: save-commit-hash
        run: |
          if [ "${{ steps.create-commit.outputs.changes_detected || 'unknown' }}" == "true" ]; then
            echo '::set-output name=commit_hash::${{ steps.create-commit.outputs.commit_hash }}'
          else
            echo "::set-output name=commit_hash::${GITHUB_SHA}"
          fi
  helm:
    runs-on: ubuntu-latest
    if: github.branch == 'master'
    needs: kompose

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          ref: ${{needs.kompose.outputs.commit_hash}}
          fetch-depth: 0
      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@v0.8.0
        with:
          setup-tools: |
            helmv3
            yq
          helm: "3.8.0"
          yq: "4.16.2"
      - uses: Azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - name: Helm Deploy
        run: helm --namespace food-data upgrade food-data k8s